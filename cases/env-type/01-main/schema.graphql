#import { Module } into ExternalEnvApi from "ens/external-env.polywrap.eth"

type EnvObject {
  prop: String!
}

enum EnvEnum {
  FIRST
  SECOND
}

type Env {
  str: String!
  optStr: String
  optFilledStr: String
  number: Int8!
  optNumber: Int8
  bool: Boolean!
  optBool: Boolean
  en: EnvEnum!
  optEnum: EnvEnum
  object: EnvObject!
  optObject: EnvObject
  array: [UInt32!]!
}

type CompoundEnv {
  local: Env!
  external: ExternalEnvApi_Env!
}

type Module {
  methodNoEnv(
    arg: String!
  ): String!

  methodRequireEnv(
    arg: String!
  ): Env! @env(required: true)

  methodOptionalEnv(
    arg: String!
  ): Env @env(required: false)

  subinvokeEnvMethod(
    arg: String!
  ): CompoundEnv! @env(required: true)
}
