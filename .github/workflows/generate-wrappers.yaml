name: generate-wrappers

on:
  workflow_call:
    inputs:
      cli-path:
        required: false
        type: string
      wasm-path:
        required: false
        type: string

jobs:
  generate_wrappers:
    name: Generate wrappers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: polywrap/wasm-test-harness
          ref: ${{ github.event.pull_request.base.ref }}
          fetch-depth: 0

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          path: toolchain
          fetch-depth: 0


      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
        working-directory: ./toolchain

      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --nonInteractive --frozen-lockfile --prefer-offline
        working-directory: ./toolchain

      - name: Build toolchain repository
        run: yarn build
        working-directory: ./toolchain

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            ./target/
          key: cargo-${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-${{ github.job }}

      - name: Set environment CLI path variable
        if: ${{ inputs.cli-path }}
        run: echo "POLYWRAP_CLI_PATH=${{ github.workspace }}/${{ inputs.cli-path }}" >> $GITHUB_ENV

      - name: Set environment WASM path variable
        if: ${{ inputs.wasm-path }}
        run: echo "POLYWRAP_WASM_PATH=${{ github.workspace }}/${{ inputs.wasm-path }}" >> $GITHUB_ENV

      - name: Run wrappers build
        run: cargo run -- -w

      - uses: actions/upload-artifact@v3
        with:
          name: wrappers
          path: ./wrappers